version: '3.9'

services:
  app:
    build:
      context: ./node
    container_name: app
    restart: always
    networks:
      - challengedb-network
    volumes:
      - ./node:/usr/src/app
      - /usr/src/app/node_modules
    tty: true
    depends_on:
      db:
        condition: service_healthy

  nginx:
    build:
      context: ./nginx
    container_name: nginx
    networks:
      - challengedb-network
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf  # Montando o arquivo nginx.conf
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      - app
      - db

  db:
    build: 
      context: ./mysql
      dockerfile: Dockerfile
    container_name: db
    command: --innodb-use-native-aio=0
    restart: always
    tty: true
    volumes:
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - MYSQL_DATABASE=challengedb
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=user
      - MYSQL_PASSWORD=user
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-uroot", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - challengedb-network

networks:
  challengedb-network:
    driver: bridge
